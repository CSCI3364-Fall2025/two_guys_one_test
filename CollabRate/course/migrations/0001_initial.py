# Generated by Django 5.1.7 on 2025-04-28 19:07

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dashboard', '0016_remove_team_course_remove_team_students_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Untitled Form', max_length=255)),
                ('due_datetime', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('num_likert', models.PositiveIntegerField(default=3)),
                ('num_open_ended', models.PositiveIntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('self_evaluate', models.BooleanField(default=False)),
                ('color_1', models.CharField(default='#872729', max_length=7, validators=[django.core.validators.RegexValidator(message='Enter a valid hex color code, e.g., #FFF or #FFFFFF.', regex='^#(?:[0-9a-fA-F]{3}){1,2}$')])),
                ('color_2', models.CharField(default='#C44B4B', max_length=7, validators=[django.core.validators.RegexValidator(message='Enter a valid hex color code, e.g., #FFF or #FFFFFF.', regex='^#(?:[0-9a-fA-F]{3}){1,2}$')])),
                ('color_3', models.CharField(default='#F2F0EF', max_length=7, validators=[django.core.validators.RegexValidator(message='Enter a valid hex color code, e.g., #FFF or #FFFFFF.', regex='^#(?:[0-9a-fA-F]{3}){1,2}$')])),
                ('color_4', models.CharField(default='#3D5A80', max_length=7, validators=[django.core.validators.RegexValidator(message='Enter a valid hex color code, e.g., #FFF or #FFFFFF.', regex='^#(?:[0-9a-fA-F]{3}){1,2}$')])),
                ('color_5', models.CharField(default='#293241', max_length=7, validators=[django.core.validators.RegexValidator(message='Enter a valid hex color code, e.g., #FFF or #FFFFFF.', regex='^#(?:[0-9a-fA-F]{3}){1,2}$')])),
                ('state', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('released', 'Released')], default='draft', max_length=9)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_forms', to='dashboard.course')),
            ],
        ),
        migrations.CreateModel(
            name='Likert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('order', models.IntegerField()),
                ('option_1', models.CharField(max_length=255)),
                ('option_2', models.CharField(max_length=255)),
                ('option_3', models.CharField(max_length=255)),
                ('option_4', models.CharField(max_length=255)),
                ('option_5', models.CharField(max_length=255)),
                ('course_form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likert_questions', to='course.courseform')),
            ],
        ),
        migrations.CreateModel(
            name='LikertResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.IntegerField()),
                ('evaluator', models.ForeignKey(limit_choices_to={'user_type': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='likert_responses_as_evaluator', to=settings.AUTH_USER_MODEL)),
                ('evaluee', models.ForeignKey(limit_choices_to={'user_type': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='likert_responses_as_evaluee', to=settings.AUTH_USER_MODEL)),
                ('likert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='course.likert')),
            ],
        ),
        migrations.CreateModel(
            name='OpenEnded',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('order', models.IntegerField()),
                ('course_form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='open_ended_questions', to='course.courseform')),
            ],
        ),
        migrations.CreateModel(
            name='OpenEndedResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField()),
                ('evaluator', models.ForeignKey(limit_choices_to={'user_type': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='open_ended_responses_as_evaluator', to=settings.AUTH_USER_MODEL)),
                ('evaluee', models.ForeignKey(limit_choices_to={'user_type': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='open_ended_responses_as_evaluee', to=settings.AUTH_USER_MODEL)),
                ('open_ended', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='course.openended')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='dashboard.course')),
                ('students', models.ManyToManyField(blank=True, limit_choices_to={'user_type': 'student'}, related_name='teams', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='courseform',
            name='teams',
            field=models.ManyToManyField(blank=True, related_name='course_forms', to='course.team'),
        ),
    ]
